
public class Stack<T> {

	private static class Node<T> {
		private T data;
		private Node<T> next;

		Node(T data, Node<T> next) {
			this.data = data;
			this.next = next;
		}
	}

	Node<T> head;
	Node<T> tail;
	int size;

	private Stack(T elem) {
		Node<T> node = new Node<T>(elem, null);
		head = tail = node;
		size = 1;
	}

	public boolean isEmpty() {
		return size == 0;
	}

	public T peek() {
		return head.data;
	}

	public void push(T elem) {
		if (size == 0) {
			new Stack<T>(elem);
		} else {
			addToHead(elem);
		}
	}

	private void addToHead(T elem) {
		Node<T> node = new Node<T>(elem, head);
		head = node;
	}

	public T pop() {
		if (isEmpty())
			throw new RuntimeException("Stack is currently empty");
		T data = head.data;
		return data;
	}

}
