
public class Queue<T> {

	private class Node<T> {
		private T data;
		private Node<T> next;

		Node(T data, Node<T> next) {
			this.data = data;
			this.next = next;
		}
	}

	Node<T> head;
	Node<T> tail;
	int size;

	Queue() {
		head = tail = null;
		size = 0;
	}

	public boolean isEmpty() {
		return size == 0;
	}

	public void enqueue(T elem) {
		Node<T> node = new Node<T>(elem, null);
		tail.next = node;
		tail = node;
		size++;
	}

	public T dequeue() {
		if (isEmpty())
			throw new RuntimeException("Queue is currently empty");
		T data = head.data;
		return data;
	}
}
