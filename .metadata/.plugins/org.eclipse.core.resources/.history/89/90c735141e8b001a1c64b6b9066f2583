import java.util.ArrayList;
import java.util.List;

public class SLL<T> {

	Node<T> head;
	Node<T> tail;
	int size;
	List<Node<T>> nodes;

	SLL() {
		head = tail = null;
		size = 0;
		nodes = new ArrayList<>();
	}

	private class Node<T> {
		T data;
		Node<T> next;

		Node(T data, Node next) {
			this.data = data;
			this.next = next;
		}
	}

	public void addToList(Node<T> node) {
		nodes.add(node);
	}

	public boolean isEmpty() {
		return size == 0;
	}

	// Add an Element, O(1)
	public void add(T elem) {
		addLast(elem);
	}

	// Add a node at the end of the linked list, O(1)
	public void addLast(T elem) {
		Node<T> node = new Node<T>(elem, null);
		if (isEmpty()) {
			head = tail = node;
		}
		tail.next = node;
		tail = node;
		size++;
		addToList(node);
	}

	public void addFirst(T elem) {

	}

}